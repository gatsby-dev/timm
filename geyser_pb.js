// source: geyser.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var solana$storage_pb = require('./solana-storage_pb.js');
goog.object.extend(proto, solana$storage_pb);
goog.exportSymbol('proto.geyser.CommitmentLevel', null, global);
goog.exportSymbol('proto.geyser.GetBlockHeightRequest', null, global);
goog.exportSymbol('proto.geyser.GetBlockHeightResponse', null, global);
goog.exportSymbol('proto.geyser.GetLatestBlockhashRequest', null, global);
goog.exportSymbol('proto.geyser.GetLatestBlockhashResponse', null, global);
goog.exportSymbol('proto.geyser.GetSlotRequest', null, global);
goog.exportSymbol('proto.geyser.GetSlotResponse', null, global);
goog.exportSymbol('proto.geyser.GetVersionRequest', null, global);
goog.exportSymbol('proto.geyser.GetVersionResponse', null, global);
goog.exportSymbol('proto.geyser.IsBlockhashValidRequest', null, global);
goog.exportSymbol('proto.geyser.IsBlockhashValidResponse', null, global);
goog.exportSymbol('proto.geyser.PingRequest', null, global);
goog.exportSymbol('proto.geyser.PongResponse', null, global);
goog.exportSymbol('proto.geyser.SlotStatus', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequest', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestAccountsDataSlice', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccounts', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccountsFilter', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccountsFilter.FilterCase', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccountsFilterLamports', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccountsFilterLamports.CmpCase', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.DataCase', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterBlocks', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterBlocksMeta', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterEntry', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterSlots', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestFilterTransactions', null, global);
goog.exportSymbol('proto.geyser.SubscribeRequestPing', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdate', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdate.UpdateOneofCase', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateAccount', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateAccountInfo', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateBlock', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateBlockMeta', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateEntry', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdatePing', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdatePong', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateSlot', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateTransaction', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateTransactionInfo', null, global);
goog.exportSymbol('proto.geyser.SubscribeUpdateTransactionStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.geyser.SubscribeRequest.repeatedFields_, null);
};
goog.inherits(proto.geyser.SubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequest.displayName = 'proto.geyser.SubscribeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterAccounts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.geyser.SubscribeRequestFilterAccounts.repeatedFields_, null);
};
goog.inherits(proto.geyser.SubscribeRequestFilterAccounts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterAccounts.displayName = 'proto.geyser.SubscribeRequestFilterAccounts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterAccountsFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_);
};
goog.inherits(proto.geyser.SubscribeRequestFilterAccountsFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterAccountsFilter.displayName = 'proto.geyser.SubscribeRequestFilterAccountsFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_);
};
goog.inherits(proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.displayName = 'proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_);
};
goog.inherits(proto.geyser.SubscribeRequestFilterAccountsFilterLamports, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterAccountsFilterLamports.displayName = 'proto.geyser.SubscribeRequestFilterAccountsFilterLamports';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterSlots = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeRequestFilterSlots, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterSlots.displayName = 'proto.geyser.SubscribeRequestFilterSlots';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterTransactions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.geyser.SubscribeRequestFilterTransactions.repeatedFields_, null);
};
goog.inherits(proto.geyser.SubscribeRequestFilterTransactions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterTransactions.displayName = 'proto.geyser.SubscribeRequestFilterTransactions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterBlocks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.geyser.SubscribeRequestFilterBlocks.repeatedFields_, null);
};
goog.inherits(proto.geyser.SubscribeRequestFilterBlocks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterBlocks.displayName = 'proto.geyser.SubscribeRequestFilterBlocks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterBlocksMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeRequestFilterBlocksMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterBlocksMeta.displayName = 'proto.geyser.SubscribeRequestFilterBlocksMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestFilterEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeRequestFilterEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestFilterEntry.displayName = 'proto.geyser.SubscribeRequestFilterEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestAccountsDataSlice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeRequestAccountsDataSlice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestAccountsDataSlice.displayName = 'proto.geyser.SubscribeRequestAccountsDataSlice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeRequestPing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeRequestPing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeRequestPing.displayName = 'proto.geyser.SubscribeRequestPing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.geyser.SubscribeUpdate.repeatedFields_, proto.geyser.SubscribeUpdate.oneofGroups_);
};
goog.inherits(proto.geyser.SubscribeUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdate.displayName = 'proto.geyser.SubscribeUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateAccount.displayName = 'proto.geyser.SubscribeUpdateAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateAccountInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateAccountInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateAccountInfo.displayName = 'proto.geyser.SubscribeUpdateAccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateSlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateSlot.displayName = 'proto.geyser.SubscribeUpdateSlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateTransaction.displayName = 'proto.geyser.SubscribeUpdateTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateTransactionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateTransactionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateTransactionInfo.displayName = 'proto.geyser.SubscribeUpdateTransactionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateTransactionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateTransactionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateTransactionStatus.displayName = 'proto.geyser.SubscribeUpdateTransactionStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.geyser.SubscribeUpdateBlock.repeatedFields_, null);
};
goog.inherits(proto.geyser.SubscribeUpdateBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateBlock.displayName = 'proto.geyser.SubscribeUpdateBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateBlockMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateBlockMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateBlockMeta.displayName = 'proto.geyser.SubscribeUpdateBlockMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdateEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdateEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdateEntry.displayName = 'proto.geyser.SubscribeUpdateEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdatePing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdatePing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdatePing.displayName = 'proto.geyser.SubscribeUpdatePing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.SubscribeUpdatePong = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.SubscribeUpdatePong, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.SubscribeUpdatePong.displayName = 'proto.geyser.SubscribeUpdatePong';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.PingRequest.displayName = 'proto.geyser.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.PongResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.PongResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.PongResponse.displayName = 'proto.geyser.PongResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetLatestBlockhashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetLatestBlockhashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetLatestBlockhashRequest.displayName = 'proto.geyser.GetLatestBlockhashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetLatestBlockhashResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetLatestBlockhashResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetLatestBlockhashResponse.displayName = 'proto.geyser.GetLatestBlockhashResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetBlockHeightRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetBlockHeightRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetBlockHeightRequest.displayName = 'proto.geyser.GetBlockHeightRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetBlockHeightResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetBlockHeightResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetBlockHeightResponse.displayName = 'proto.geyser.GetBlockHeightResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetSlotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetSlotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetSlotRequest.displayName = 'proto.geyser.GetSlotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetSlotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetSlotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetSlotResponse.displayName = 'proto.geyser.GetSlotResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetVersionRequest.displayName = 'proto.geyser.GetVersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.GetVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.GetVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.GetVersionResponse.displayName = 'proto.geyser.GetVersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.IsBlockhashValidRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.IsBlockhashValidRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.IsBlockhashValidRequest.displayName = 'proto.geyser.IsBlockhashValidRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geyser.IsBlockhashValidResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.geyser.IsBlockhashValidResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geyser.IsBlockhashValidResponse.displayName = 'proto.geyser.IsBlockhashValidResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geyser.SubscribeRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsMap: (f = msg.getAccountsMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterAccounts.toObject) : [],
    slotsMap: (f = msg.getSlotsMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterSlots.toObject) : [],
    transactionsMap: (f = msg.getTransactionsMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterTransactions.toObject) : [],
    transactionsStatusMap: (f = msg.getTransactionsStatusMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterTransactions.toObject) : [],
    blocksMap: (f = msg.getBlocksMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterBlocks.toObject) : [],
    blocksMetaMap: (f = msg.getBlocksMetaMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterBlocksMeta.toObject) : [],
    entryMap: (f = msg.getEntryMap()) ? f.toObject(includeInstance, proto.geyser.SubscribeRequestFilterEntry.toObject) : [],
    commitment: jspb.Message.getFieldWithDefault(msg, 6, 0),
    accountsDataSliceList: jspb.Message.toObjectList(msg.getAccountsDataSliceList(),
    proto.geyser.SubscribeRequestAccountsDataSlice.toObject, includeInstance),
    ping: (f = msg.getPing()) && proto.geyser.SubscribeRequestPing.toObject(includeInstance, f),
    fromSlot: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequest}
 */
proto.geyser.SubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequest;
  return proto.geyser.SubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequest}
 */
proto.geyser.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAccountsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterAccounts.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterAccounts());
         });
      break;
    case 2:
      var value = msg.getSlotsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterSlots.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterSlots());
         });
      break;
    case 3:
      var value = msg.getTransactionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterTransactions.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterTransactions());
         });
      break;
    case 10:
      var value = msg.getTransactionsStatusMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterTransactions.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterTransactions());
         });
      break;
    case 4:
      var value = msg.getBlocksMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterBlocks.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterBlocks());
         });
      break;
    case 5:
      var value = msg.getBlocksMetaMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterBlocksMeta.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterBlocksMeta());
         });
      break;
    case 8:
      var value = msg.getEntryMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.geyser.SubscribeRequestFilterEntry.deserializeBinaryFromReader, "", new proto.geyser.SubscribeRequestFilterEntry());
         });
      break;
    case 6:
      var value = /** @type {!proto.geyser.CommitmentLevel} */ (reader.readEnum());
      msg.setCommitment(value);
      break;
    case 7:
      var value = new proto.geyser.SubscribeRequestAccountsDataSlice;
      reader.readMessage(value,proto.geyser.SubscribeRequestAccountsDataSlice.deserializeBinaryFromReader);
      msg.addAccountsDataSlice(value);
      break;
    case 9:
      var value = new proto.geyser.SubscribeRequestPing;
      reader.readMessage(value,proto.geyser.SubscribeRequestPing.deserializeBinaryFromReader);
      msg.setPing(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterAccounts.serializeBinaryToWriter);
  }
  f = message.getSlotsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterSlots.serializeBinaryToWriter);
  }
  f = message.getTransactionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterTransactions.serializeBinaryToWriter);
  }
  f = message.getTransactionsStatusMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterTransactions.serializeBinaryToWriter);
  }
  f = message.getBlocksMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterBlocks.serializeBinaryToWriter);
  }
  f = message.getBlocksMetaMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterBlocksMeta.serializeBinaryToWriter);
  }
  f = message.getEntryMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.geyser.SubscribeRequestFilterEntry.serializeBinaryToWriter);
  }
  f = /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getAccountsDataSliceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.geyser.SubscribeRequestAccountsDataSlice.serializeBinaryToWriter
    );
  }
  f = message.getPing();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.geyser.SubscribeRequestPing.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
};


/**
 * map<string, SubscribeRequestFilterAccounts> accounts = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterAccounts>}
 */
proto.geyser.SubscribeRequest.prototype.getAccountsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterAccounts>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterAccounts));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearAccountsMap = function() {
  this.getAccountsMap().clear();
  return this;};


/**
 * map<string, SubscribeRequestFilterSlots> slots = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterSlots>}
 */
proto.geyser.SubscribeRequest.prototype.getSlotsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterSlots>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterSlots));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearSlotsMap = function() {
  this.getSlotsMap().clear();
  return this;};


/**
 * map<string, SubscribeRequestFilterTransactions> transactions = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterTransactions>}
 */
proto.geyser.SubscribeRequest.prototype.getTransactionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterTransactions>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterTransactions));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearTransactionsMap = function() {
  this.getTransactionsMap().clear();
  return this;};


/**
 * map<string, SubscribeRequestFilterTransactions> transactions_status = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterTransactions>}
 */
proto.geyser.SubscribeRequest.prototype.getTransactionsStatusMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterTransactions>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterTransactions));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearTransactionsStatusMap = function() {
  this.getTransactionsStatusMap().clear();
  return this;};


/**
 * map<string, SubscribeRequestFilterBlocks> blocks = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterBlocks>}
 */
proto.geyser.SubscribeRequest.prototype.getBlocksMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterBlocks>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterBlocks));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearBlocksMap = function() {
  this.getBlocksMap().clear();
  return this;};


/**
 * map<string, SubscribeRequestFilterBlocksMeta> blocks_meta = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterBlocksMeta>}
 */
proto.geyser.SubscribeRequest.prototype.getBlocksMetaMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterBlocksMeta>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterBlocksMeta));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearBlocksMetaMap = function() {
  this.getBlocksMetaMap().clear();
  return this;};


/**
 * map<string, SubscribeRequestFilterEntry> entry = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterEntry>}
 */
proto.geyser.SubscribeRequest.prototype.getEntryMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.geyser.SubscribeRequestFilterEntry>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.geyser.SubscribeRequestFilterEntry));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearEntryMap = function() {
  this.getEntryMap().clear();
  return this;};


/**
 * optional CommitmentLevel commitment = 6;
 * @return {!proto.geyser.CommitmentLevel}
 */
proto.geyser.SubscribeRequest.prototype.getCommitment = function() {
  return /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.geyser.CommitmentLevel} value
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.setCommitment = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearCommitment = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequest.prototype.hasCommitment = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated SubscribeRequestAccountsDataSlice accounts_data_slice = 7;
 * @return {!Array<!proto.geyser.SubscribeRequestAccountsDataSlice>}
 */
proto.geyser.SubscribeRequest.prototype.getAccountsDataSliceList = function() {
  return /** @type{!Array<!proto.geyser.SubscribeRequestAccountsDataSlice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geyser.SubscribeRequestAccountsDataSlice, 7));
};


/**
 * @param {!Array<!proto.geyser.SubscribeRequestAccountsDataSlice>} value
 * @return {!proto.geyser.SubscribeRequest} returns this
*/
proto.geyser.SubscribeRequest.prototype.setAccountsDataSliceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.geyser.SubscribeRequestAccountsDataSlice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestAccountsDataSlice}
 */
proto.geyser.SubscribeRequest.prototype.addAccountsDataSlice = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.geyser.SubscribeRequestAccountsDataSlice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearAccountsDataSliceList = function() {
  return this.setAccountsDataSliceList([]);
};


/**
 * optional SubscribeRequestPing ping = 9;
 * @return {?proto.geyser.SubscribeRequestPing}
 */
proto.geyser.SubscribeRequest.prototype.getPing = function() {
  return /** @type{?proto.geyser.SubscribeRequestPing} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeRequestPing, 9));
};


/**
 * @param {?proto.geyser.SubscribeRequestPing|undefined} value
 * @return {!proto.geyser.SubscribeRequest} returns this
*/
proto.geyser.SubscribeRequest.prototype.setPing = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearPing = function() {
  return this.setPing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequest.prototype.hasPing = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 from_slot = 11;
 * @return {number}
 */
proto.geyser.SubscribeRequest.prototype.getFromSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.setFromSlot = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequest} returns this
 */
proto.geyser.SubscribeRequest.prototype.clearFromSlot = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequest.prototype.hasFromSlot = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geyser.SubscribeRequestFilterAccounts.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterAccounts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterAccounts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccounts.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    ownerList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.geyser.SubscribeRequestFilterAccountsFilter.toObject, includeInstance),
    nonemptyTxnSignature: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterAccounts}
 */
proto.geyser.SubscribeRequestFilterAccounts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterAccounts;
  return proto.geyser.SubscribeRequestFilterAccounts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterAccounts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterAccounts}
 */
proto.geyser.SubscribeRequestFilterAccounts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addOwner(value);
      break;
    case 4:
      var value = new proto.geyser.SubscribeRequestFilterAccountsFilter;
      reader.readMessage(value,proto.geyser.SubscribeRequestFilterAccountsFilter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNonemptyTxnSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterAccounts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterAccounts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccounts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getOwnerList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.geyser.SubscribeRequestFilterAccountsFilter.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * repeated string account = 2;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.getAccountList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.setAccountList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.addAccount = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.clearAccountList = function() {
  return this.setAccountList([]);
};


/**
 * repeated string owner = 3;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.getOwnerList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.setOwnerList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.addOwner = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.clearOwnerList = function() {
  return this.setOwnerList([]);
};


/**
 * repeated SubscribeRequestFilterAccountsFilter filters = 4;
 * @return {!Array<!proto.geyser.SubscribeRequestFilterAccountsFilter>}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.geyser.SubscribeRequestFilterAccountsFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geyser.SubscribeRequestFilterAccountsFilter, 4));
};


/**
 * @param {!Array<!proto.geyser.SubscribeRequestFilterAccountsFilter>} value
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
*/
proto.geyser.SubscribeRequestFilterAccounts.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.geyser.SubscribeRequestFilterAccountsFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional bool nonempty_txn_signature = 5;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.getNonemptyTxnSignature = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.setNonemptyTxnSignature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccounts} returns this
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.clearNonemptyTxnSignature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccounts.prototype.hasNonemptyTxnSignature = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.FilterCase = {
  FILTER_NOT_SET: 0,
  MEMCMP: 1,
  DATASIZE: 2,
  TOKEN_ACCOUNT_STATE: 3,
  LAMPORTS: 4
};

/**
 * @return {proto.geyser.SubscribeRequestFilterAccountsFilter.FilterCase}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.getFilterCase = function() {
  return /** @type {proto.geyser.SubscribeRequestFilterAccountsFilter.FilterCase} */(jspb.Message.computeOneofCase(this, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterAccountsFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    memcmp: (f = msg.getMemcmp()) && proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.toObject(includeInstance, f),
    datasize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tokenAccountState: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    lamports: (f = msg.getLamports()) && proto.geyser.SubscribeRequestFilterAccountsFilterLamports.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterAccountsFilter;
  return proto.geyser.SubscribeRequestFilterAccountsFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp;
      reader.readMessage(value,proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.deserializeBinaryFromReader);
      msg.setMemcmp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDatasize(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTokenAccountState(value);
      break;
    case 4:
      var value = new proto.geyser.SubscribeRequestFilterAccountsFilterLamports;
      reader.readMessage(value,proto.geyser.SubscribeRequestFilterAccountsFilterLamports.deserializeBinaryFromReader);
      msg.setLamports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterAccountsFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemcmp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLamports();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.geyser.SubscribeRequestFilterAccountsFilterLamports.serializeBinaryToWriter
    );
  }
};


/**
 * optional SubscribeRequestFilterAccountsFilterMemcmp memcmp = 1;
 * @return {?proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.getMemcmp = function() {
  return /** @type{?proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp, 1));
};


/**
 * @param {?proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp|undefined} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
*/
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.setMemcmp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.clearMemcmp = function() {
  return this.setMemcmp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.hasMemcmp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 datasize = 2;
 * @return {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.getDatasize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.setDatasize = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.clearDatasize = function() {
  return jspb.Message.setOneofField(this, 2, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.hasDatasize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool token_account_state = 3;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.getTokenAccountState = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.setTokenAccountState = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.clearTokenAccountState = function() {
  return jspb.Message.setOneofField(this, 3, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.hasTokenAccountState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SubscribeRequestFilterAccountsFilterLamports lamports = 4;
 * @return {?proto.geyser.SubscribeRequestFilterAccountsFilterLamports}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.getLamports = function() {
  return /** @type{?proto.geyser.SubscribeRequestFilterAccountsFilterLamports} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeRequestFilterAccountsFilterLamports, 4));
};


/**
 * @param {?proto.geyser.SubscribeRequestFilterAccountsFilterLamports|undefined} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
*/
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.setLamports = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.geyser.SubscribeRequestFilterAccountsFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilter} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.clearLamports = function() {
  return this.setLamports(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilter.prototype.hasLamports = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.DataCase = {
  DATA_NOT_SET: 0,
  BYTES: 2,
  BASE58: 3,
  BASE64: 4
};

/**
 * @return {proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.DataCase}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getDataCase = function() {
  return /** @type {proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.DataCase} */(jspb.Message.computeOneofCase(this, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bytes: msg.getBytes_asB64(),
    base58: jspb.Message.getFieldWithDefault(msg, 3, ""),
    base64: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp;
  return proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBase58(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBase64(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes bytes = 2;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.setBytes = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.clearBytes = function() {
  return jspb.Message.setOneofField(this, 2, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.hasBytes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string base58 = 3;
 * @return {string}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getBase58 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.setBase58 = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.clearBase58 = function() {
  return jspb.Message.setOneofField(this, 3, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.hasBase58 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string base64 = 4;
 * @return {string}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.getBase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.setBase64 = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.clearBase64 = function() {
  return jspb.Message.setOneofField(this, 4, proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterMemcmp.prototype.hasBase64 = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.CmpCase = {
  CMP_NOT_SET: 0,
  EQ: 1,
  NE: 2,
  LT: 3,
  GT: 4
};

/**
 * @return {proto.geyser.SubscribeRequestFilterAccountsFilterLamports.CmpCase}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.getCmpCase = function() {
  return /** @type {proto.geyser.SubscribeRequestFilterAccountsFilterLamports.CmpCase} */(jspb.Message.computeOneofCase(this, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterAccountsFilterLamports.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.toObject = function(includeInstance, msg) {
  var f, obj = {
    eq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ne: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gt: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterAccountsFilterLamports;
  return proto.geyser.SubscribeRequestFilterAccountsFilterLamports.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEq(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNe(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterAccountsFilterLamports.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 eq = 1;
 * @return {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.getEq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.setEq = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.clearEq = function() {
  return jspb.Message.setOneofField(this, 1, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.hasEq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 ne = 2;
 * @return {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.getNe = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.setNe = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.clearNe = function() {
  return jspb.Message.setOneofField(this, 2, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.hasNe = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 lt = 3;
 * @return {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.getLt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.setLt = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.clearLt = function() {
  return jspb.Message.setOneofField(this, 3, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.hasLt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 gt = 4;
 * @return {number}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.getGt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.setGt = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterAccountsFilterLamports} returns this
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.clearGt = function() {
  return jspb.Message.setOneofField(this, 4, proto.geyser.SubscribeRequestFilterAccountsFilterLamports.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterAccountsFilterLamports.prototype.hasGt = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterSlots.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterSlots} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterSlots.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterByCommitment: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    interslotUpdates: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterSlots}
 */
proto.geyser.SubscribeRequestFilterSlots.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterSlots;
  return proto.geyser.SubscribeRequestFilterSlots.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterSlots} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterSlots}
 */
proto.geyser.SubscribeRequestFilterSlots.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFilterByCommitment(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterslotUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterSlots.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterSlots} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterSlots.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool filter_by_commitment = 1;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.getFilterByCommitment = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterSlots} returns this
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.setFilterByCommitment = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterSlots} returns this
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.clearFilterByCommitment = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.hasFilterByCommitment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool interslot_updates = 2;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.getInterslotUpdates = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterSlots} returns this
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.setInterslotUpdates = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterSlots} returns this
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.clearInterslotUpdates = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterSlots.prototype.hasInterslotUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geyser.SubscribeRequestFilterTransactions.repeatedFields_ = [3,4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterTransactions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterTransactions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterTransactions.toObject = function(includeInstance, msg) {
  var f, obj = {
    vote: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    failed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    signature: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accountIncludeList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    accountExcludeList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    accountRequiredList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions}
 */
proto.geyser.SubscribeRequestFilterTransactions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterTransactions;
  return proto.geyser.SubscribeRequestFilterTransactions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterTransactions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions}
 */
proto.geyser.SubscribeRequestFilterTransactions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVote(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailed(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountInclude(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountExclude(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterTransactions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterTransactions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterTransactions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccountIncludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAccountExcludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getAccountRequiredList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional bool vote = 1;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.getVote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.setVote = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.clearVote = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.hasVote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool failed = 2;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.getFailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.setFailed = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.clearFailed = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.hasFailed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string signature = 5;
 * @return {string}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.setSignature = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.clearSignature = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string account_include = 3;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.getAccountIncludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.setAccountIncludeList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.addAccountInclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.clearAccountIncludeList = function() {
  return this.setAccountIncludeList([]);
};


/**
 * repeated string account_exclude = 4;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.getAccountExcludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.setAccountExcludeList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.addAccountExclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.clearAccountExcludeList = function() {
  return this.setAccountExcludeList([]);
};


/**
 * repeated string account_required = 6;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.getAccountRequiredList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.setAccountRequiredList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.addAccountRequired = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterTransactions} returns this
 */
proto.geyser.SubscribeRequestFilterTransactions.prototype.clearAccountRequiredList = function() {
  return this.setAccountRequiredList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geyser.SubscribeRequestFilterBlocks.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterBlocks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterBlocks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterBlocks.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountIncludeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    includeTransactions: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    includeAccounts: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    includeEntries: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterBlocks}
 */
proto.geyser.SubscribeRequestFilterBlocks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterBlocks;
  return proto.geyser.SubscribeRequestFilterBlocks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterBlocks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterBlocks}
 */
proto.geyser.SubscribeRequestFilterBlocks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountInclude(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeTransactions(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeAccounts(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterBlocks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterBlocks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterBlocks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountIncludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated string account_include = 1;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.getAccountIncludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.setAccountIncludeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.addAccountInclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.clearAccountIncludeList = function() {
  return this.setAccountIncludeList([]);
};


/**
 * optional bool include_transactions = 2;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.getIncludeTransactions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.setIncludeTransactions = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.clearIncludeTransactions = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.hasIncludeTransactions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool include_accounts = 3;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.getIncludeAccounts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.setIncludeAccounts = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.clearIncludeAccounts = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.hasIncludeAccounts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool include_entries = 4;
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.getIncludeEntries = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.setIncludeEntries = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeRequestFilterBlocks} returns this
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.clearIncludeEntries = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeRequestFilterBlocks.prototype.hasIncludeEntries = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterBlocksMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterBlocksMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterBlocksMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterBlocksMeta.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterBlocksMeta}
 */
proto.geyser.SubscribeRequestFilterBlocksMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterBlocksMeta;
  return proto.geyser.SubscribeRequestFilterBlocksMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterBlocksMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterBlocksMeta}
 */
proto.geyser.SubscribeRequestFilterBlocksMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterBlocksMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterBlocksMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterBlocksMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterBlocksMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestFilterEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestFilterEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestFilterEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterEntry.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestFilterEntry}
 */
proto.geyser.SubscribeRequestFilterEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestFilterEntry;
  return proto.geyser.SubscribeRequestFilterEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestFilterEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestFilterEntry}
 */
proto.geyser.SubscribeRequestFilterEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestFilterEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestFilterEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestFilterEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestFilterEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestAccountsDataSlice.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestAccountsDataSlice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestAccountsDataSlice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestAccountsDataSlice.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestAccountsDataSlice}
 */
proto.geyser.SubscribeRequestAccountsDataSlice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestAccountsDataSlice;
  return proto.geyser.SubscribeRequestAccountsDataSlice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestAccountsDataSlice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestAccountsDataSlice}
 */
proto.geyser.SubscribeRequestAccountsDataSlice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestAccountsDataSlice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestAccountsDataSlice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestAccountsDataSlice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestAccountsDataSlice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.geyser.SubscribeRequestAccountsDataSlice.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestAccountsDataSlice} returns this
 */
proto.geyser.SubscribeRequestAccountsDataSlice.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 length = 2;
 * @return {number}
 */
proto.geyser.SubscribeRequestAccountsDataSlice.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestAccountsDataSlice} returns this
 */
proto.geyser.SubscribeRequestAccountsDataSlice.prototype.setLength = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeRequestPing.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeRequestPing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeRequestPing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestPing.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeRequestPing}
 */
proto.geyser.SubscribeRequestPing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeRequestPing;
  return proto.geyser.SubscribeRequestPing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeRequestPing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeRequestPing}
 */
proto.geyser.SubscribeRequestPing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeRequestPing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeRequestPing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeRequestPing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeRequestPing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.geyser.SubscribeRequestPing.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeRequestPing} returns this
 */
proto.geyser.SubscribeRequestPing.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geyser.SubscribeUpdate.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.geyser.SubscribeUpdate.oneofGroups_ = [[2,3,4,10,5,6,9,7,8]];

/**
 * @enum {number}
 */
proto.geyser.SubscribeUpdate.UpdateOneofCase = {
  UPDATE_ONEOF_NOT_SET: 0,
  ACCOUNT: 2,
  SLOT: 3,
  TRANSACTION: 4,
  TRANSACTION_STATUS: 10,
  BLOCK: 5,
  PING: 6,
  PONG: 9,
  BLOCK_META: 7,
  ENTRY: 8
};

/**
 * @return {proto.geyser.SubscribeUpdate.UpdateOneofCase}
 */
proto.geyser.SubscribeUpdate.prototype.getUpdateOneofCase = function() {
  return /** @type {proto.geyser.SubscribeUpdate.UpdateOneofCase} */(jspb.Message.computeOneofCase(this, proto.geyser.SubscribeUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    filtersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    account: (f = msg.getAccount()) && proto.geyser.SubscribeUpdateAccount.toObject(includeInstance, f),
    slot: (f = msg.getSlot()) && proto.geyser.SubscribeUpdateSlot.toObject(includeInstance, f),
    transaction: (f = msg.getTransaction()) && proto.geyser.SubscribeUpdateTransaction.toObject(includeInstance, f),
    transactionStatus: (f = msg.getTransactionStatus()) && proto.geyser.SubscribeUpdateTransactionStatus.toObject(includeInstance, f),
    block: (f = msg.getBlock()) && proto.geyser.SubscribeUpdateBlock.toObject(includeInstance, f),
    ping: (f = msg.getPing()) && proto.geyser.SubscribeUpdatePing.toObject(includeInstance, f),
    pong: (f = msg.getPong()) && proto.geyser.SubscribeUpdatePong.toObject(includeInstance, f),
    blockMeta: (f = msg.getBlockMeta()) && proto.geyser.SubscribeUpdateBlockMeta.toObject(includeInstance, f),
    entry: (f = msg.getEntry()) && proto.geyser.SubscribeUpdateEntry.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdate}
 */
proto.geyser.SubscribeUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdate;
  return proto.geyser.SubscribeUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdate}
 */
proto.geyser.SubscribeUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilters(value);
      break;
    case 2:
      var value = new proto.geyser.SubscribeUpdateAccount;
      reader.readMessage(value,proto.geyser.SubscribeUpdateAccount.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 3:
      var value = new proto.geyser.SubscribeUpdateSlot;
      reader.readMessage(value,proto.geyser.SubscribeUpdateSlot.deserializeBinaryFromReader);
      msg.setSlot(value);
      break;
    case 4:
      var value = new proto.geyser.SubscribeUpdateTransaction;
      reader.readMessage(value,proto.geyser.SubscribeUpdateTransaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 10:
      var value = new proto.geyser.SubscribeUpdateTransactionStatus;
      reader.readMessage(value,proto.geyser.SubscribeUpdateTransactionStatus.deserializeBinaryFromReader);
      msg.setTransactionStatus(value);
      break;
    case 5:
      var value = new proto.geyser.SubscribeUpdateBlock;
      reader.readMessage(value,proto.geyser.SubscribeUpdateBlock.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    case 6:
      var value = new proto.geyser.SubscribeUpdatePing;
      reader.readMessage(value,proto.geyser.SubscribeUpdatePing.deserializeBinaryFromReader);
      msg.setPing(value);
      break;
    case 9:
      var value = new proto.geyser.SubscribeUpdatePong;
      reader.readMessage(value,proto.geyser.SubscribeUpdatePong.deserializeBinaryFromReader);
      msg.setPong(value);
      break;
    case 7:
      var value = new proto.geyser.SubscribeUpdateBlockMeta;
      reader.readMessage(value,proto.geyser.SubscribeUpdateBlockMeta.deserializeBinaryFromReader);
      msg.setBlockMeta(value);
      break;
    case 8:
      var value = new proto.geyser.SubscribeUpdateEntry;
      reader.readMessage(value,proto.geyser.SubscribeUpdateEntry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.geyser.SubscribeUpdateAccount.serializeBinaryToWriter
    );
  }
  f = message.getSlot();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.geyser.SubscribeUpdateSlot.serializeBinaryToWriter
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.geyser.SubscribeUpdateTransaction.serializeBinaryToWriter
    );
  }
  f = message.getTransactionStatus();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.geyser.SubscribeUpdateTransactionStatus.serializeBinaryToWriter
    );
  }
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.geyser.SubscribeUpdateBlock.serializeBinaryToWriter
    );
  }
  f = message.getPing();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.geyser.SubscribeUpdatePing.serializeBinaryToWriter
    );
  }
  f = message.getPong();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.geyser.SubscribeUpdatePong.serializeBinaryToWriter
    );
  }
  f = message.getBlockMeta();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.geyser.SubscribeUpdateBlockMeta.serializeBinaryToWriter
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.geyser.SubscribeUpdateEntry.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string filters = 1;
 * @return {!Array<string>}
 */
proto.geyser.SubscribeUpdate.prototype.getFiltersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.setFiltersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.addFilters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};


/**
 * optional SubscribeUpdateAccount account = 2;
 * @return {?proto.geyser.SubscribeUpdateAccount}
 */
proto.geyser.SubscribeUpdate.prototype.getAccount = function() {
  return /** @type{?proto.geyser.SubscribeUpdateAccount} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateAccount, 2));
};


/**
 * @param {?proto.geyser.SubscribeUpdateAccount|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setAccount = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SubscribeUpdateSlot slot = 3;
 * @return {?proto.geyser.SubscribeUpdateSlot}
 */
proto.geyser.SubscribeUpdate.prototype.getSlot = function() {
  return /** @type{?proto.geyser.SubscribeUpdateSlot} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateSlot, 3));
};


/**
 * @param {?proto.geyser.SubscribeUpdateSlot|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setSlot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearSlot = function() {
  return this.setSlot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasSlot = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SubscribeUpdateTransaction transaction = 4;
 * @return {?proto.geyser.SubscribeUpdateTransaction}
 */
proto.geyser.SubscribeUpdate.prototype.getTransaction = function() {
  return /** @type{?proto.geyser.SubscribeUpdateTransaction} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateTransaction, 4));
};


/**
 * @param {?proto.geyser.SubscribeUpdateTransaction|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setTransaction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SubscribeUpdateTransactionStatus transaction_status = 10;
 * @return {?proto.geyser.SubscribeUpdateTransactionStatus}
 */
proto.geyser.SubscribeUpdate.prototype.getTransactionStatus = function() {
  return /** @type{?proto.geyser.SubscribeUpdateTransactionStatus} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateTransactionStatus, 10));
};


/**
 * @param {?proto.geyser.SubscribeUpdateTransactionStatus|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setTransactionStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearTransactionStatus = function() {
  return this.setTransactionStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasTransactionStatus = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SubscribeUpdateBlock block = 5;
 * @return {?proto.geyser.SubscribeUpdateBlock}
 */
proto.geyser.SubscribeUpdate.prototype.getBlock = function() {
  return /** @type{?proto.geyser.SubscribeUpdateBlock} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateBlock, 5));
};


/**
 * @param {?proto.geyser.SubscribeUpdateBlock|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearBlock = function() {
  return this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SubscribeUpdatePing ping = 6;
 * @return {?proto.geyser.SubscribeUpdatePing}
 */
proto.geyser.SubscribeUpdate.prototype.getPing = function() {
  return /** @type{?proto.geyser.SubscribeUpdatePing} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdatePing, 6));
};


/**
 * @param {?proto.geyser.SubscribeUpdatePing|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setPing = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearPing = function() {
  return this.setPing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasPing = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SubscribeUpdatePong pong = 9;
 * @return {?proto.geyser.SubscribeUpdatePong}
 */
proto.geyser.SubscribeUpdate.prototype.getPong = function() {
  return /** @type{?proto.geyser.SubscribeUpdatePong} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdatePong, 9));
};


/**
 * @param {?proto.geyser.SubscribeUpdatePong|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setPong = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearPong = function() {
  return this.setPong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasPong = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SubscribeUpdateBlockMeta block_meta = 7;
 * @return {?proto.geyser.SubscribeUpdateBlockMeta}
 */
proto.geyser.SubscribeUpdate.prototype.getBlockMeta = function() {
  return /** @type{?proto.geyser.SubscribeUpdateBlockMeta} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateBlockMeta, 7));
};


/**
 * @param {?proto.geyser.SubscribeUpdateBlockMeta|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setBlockMeta = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearBlockMeta = function() {
  return this.setBlockMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasBlockMeta = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SubscribeUpdateEntry entry = 8;
 * @return {?proto.geyser.SubscribeUpdateEntry}
 */
proto.geyser.SubscribeUpdate.prototype.getEntry = function() {
  return /** @type{?proto.geyser.SubscribeUpdateEntry} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateEntry, 8));
};


/**
 * @param {?proto.geyser.SubscribeUpdateEntry|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setEntry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.geyser.SubscribeUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.geyser.SubscribeUpdate.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.geyser.SubscribeUpdate} returns this
*/
proto.geyser.SubscribeUpdate.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdate} returns this
 */
proto.geyser.SubscribeUpdate.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdate.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && proto.geyser.SubscribeUpdateAccountInfo.toObject(includeInstance, f),
    slot: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isStartup: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateAccount}
 */
proto.geyser.SubscribeUpdateAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateAccount;
  return proto.geyser.SubscribeUpdateAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateAccount}
 */
proto.geyser.SubscribeUpdateAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.geyser.SubscribeUpdateAccountInfo;
      reader.readMessage(value,proto.geyser.SubscribeUpdateAccountInfo.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStartup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.geyser.SubscribeUpdateAccountInfo.serializeBinaryToWriter
    );
  }
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getIsStartup();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional SubscribeUpdateAccountInfo account = 1;
 * @return {?proto.geyser.SubscribeUpdateAccountInfo}
 */
proto.geyser.SubscribeUpdateAccount.prototype.getAccount = function() {
  return /** @type{?proto.geyser.SubscribeUpdateAccountInfo} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateAccountInfo, 1));
};


/**
 * @param {?proto.geyser.SubscribeUpdateAccountInfo|undefined} value
 * @return {!proto.geyser.SubscribeUpdateAccount} returns this
*/
proto.geyser.SubscribeUpdateAccount.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateAccount} returns this
 */
proto.geyser.SubscribeUpdateAccount.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateAccount.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 slot = 2;
 * @return {number}
 */
proto.geyser.SubscribeUpdateAccount.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateAccount} returns this
 */
proto.geyser.SubscribeUpdateAccount.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool is_startup = 3;
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateAccount.prototype.getIsStartup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeUpdateAccount} returns this
 */
proto.geyser.SubscribeUpdateAccount.prototype.setIsStartup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateAccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateAccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateAccountInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    lamports: jspb.Message.getFieldWithDefault(msg, 2, 0),
    owner: msg.getOwner_asB64(),
    executable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    rentEpoch: jspb.Message.getFieldWithDefault(msg, 5, 0),
    data: msg.getData_asB64(),
    writeVersion: jspb.Message.getFieldWithDefault(msg, 7, 0),
    txnSignature: msg.getTxnSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateAccountInfo}
 */
proto.geyser.SubscribeUpdateAccountInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateAccountInfo;
  return proto.geyser.SubscribeUpdateAccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateAccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateAccountInfo}
 */
proto.geyser.SubscribeUpdateAccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLamports(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOwner(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExecutable(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRentEpoch(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWriteVersion(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxnSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateAccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateAccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateAccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getLamports();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getOwner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getExecutable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRentEpoch();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getWriteVersion();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 lamports = 2;
 * @return {number}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getLamports = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setLamports = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes owner = 3;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getOwner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes owner = 3;
 * This is a type-conversion wrapper around `getOwner()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getOwner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOwner()));
};


/**
 * optional bytes owner = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOwner()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getOwner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOwner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setOwner = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bool executable = 4;
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getExecutable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setExecutable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint64 rent_epoch = 5;
 * @return {number}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getRentEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setRentEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes data = 6;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes data = 6;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional uint64 write_version = 7;
 * @return {number}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getWriteVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setWriteVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bytes txn_signature = 8;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getTxnSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes txn_signature = 8;
 * This is a type-conversion wrapper around `getTxnSignature()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getTxnSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxnSignature()));
};


/**
 * optional bytes txn_signature = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxnSignature()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.getTxnSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxnSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.setTxnSignature = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateAccountInfo} returns this
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.clearTxnSignature = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateAccountInfo.prototype.hasTxnSignature = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateSlot.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateSlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateSlot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateSlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parent: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deadError: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateSlot}
 */
proto.geyser.SubscribeUpdateSlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateSlot;
  return proto.geyser.SubscribeUpdateSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateSlot}
 */
proto.geyser.SubscribeUpdateSlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setParent(value);
      break;
    case 3:
      var value = /** @type {!proto.geyser.SlotStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateSlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateSlot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.SubscribeUpdateSlot.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateSlot} returns this
 */
proto.geyser.SubscribeUpdateSlot.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 parent = 2;
 * @return {number}
 */
proto.geyser.SubscribeUpdateSlot.prototype.getParent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateSlot} returns this
 */
proto.geyser.SubscribeUpdateSlot.prototype.setParent = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateSlot} returns this
 */
proto.geyser.SubscribeUpdateSlot.prototype.clearParent = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateSlot.prototype.hasParent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SlotStatus status = 3;
 * @return {!proto.geyser.SlotStatus}
 */
proto.geyser.SubscribeUpdateSlot.prototype.getStatus = function() {
  return /** @type {!proto.geyser.SlotStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.geyser.SlotStatus} value
 * @return {!proto.geyser.SubscribeUpdateSlot} returns this
 */
proto.geyser.SubscribeUpdateSlot.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string dead_error = 4;
 * @return {string}
 */
proto.geyser.SubscribeUpdateSlot.prototype.getDeadError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeUpdateSlot} returns this
 */
proto.geyser.SubscribeUpdateSlot.prototype.setDeadError = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateSlot} returns this
 */
proto.geyser.SubscribeUpdateSlot.prototype.clearDeadError = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateSlot.prototype.hasDeadError = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.geyser.SubscribeUpdateTransactionInfo.toObject(includeInstance, f),
    slot: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateTransaction}
 */
proto.geyser.SubscribeUpdateTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateTransaction;
  return proto.geyser.SubscribeUpdateTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateTransaction}
 */
proto.geyser.SubscribeUpdateTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.geyser.SubscribeUpdateTransactionInfo;
      reader.readMessage(value,proto.geyser.SubscribeUpdateTransactionInfo.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.geyser.SubscribeUpdateTransactionInfo.serializeBinaryToWriter
    );
  }
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional SubscribeUpdateTransactionInfo transaction = 1;
 * @return {?proto.geyser.SubscribeUpdateTransactionInfo}
 */
proto.geyser.SubscribeUpdateTransaction.prototype.getTransaction = function() {
  return /** @type{?proto.geyser.SubscribeUpdateTransactionInfo} */ (
    jspb.Message.getWrapperField(this, proto.geyser.SubscribeUpdateTransactionInfo, 1));
};


/**
 * @param {?proto.geyser.SubscribeUpdateTransactionInfo|undefined} value
 * @return {!proto.geyser.SubscribeUpdateTransaction} returns this
*/
proto.geyser.SubscribeUpdateTransaction.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateTransaction} returns this
 */
proto.geyser.SubscribeUpdateTransaction.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateTransaction.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 slot = 2;
 * @return {number}
 */
proto.geyser.SubscribeUpdateTransaction.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateTransaction} returns this
 */
proto.geyser.SubscribeUpdateTransaction.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateTransactionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateTransactionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateTransactionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    signature: msg.getSignature_asB64(),
    isVote: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    transaction: (f = msg.getTransaction()) && solana$storage_pb.Transaction.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && solana$storage_pb.TransactionStatusMeta.toObject(includeInstance, f),
    index: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo}
 */
proto.geyser.SubscribeUpdateTransactionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateTransactionInfo;
  return proto.geyser.SubscribeUpdateTransactionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateTransactionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo}
 */
proto.geyser.SubscribeUpdateTransactionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsVote(value);
      break;
    case 3:
      var value = new solana$storage_pb.Transaction;
      reader.readMessage(value,solana$storage_pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 4:
      var value = new solana$storage_pb.TransactionStatusMeta;
      reader.readMessage(value,solana$storage_pb.TransactionStatusMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateTransactionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateTransactionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateTransactionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIsVote();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      solana$storage_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      solana$storage_pb.TransactionStatusMeta.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional bytes signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes signature = 1;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool is_vote = 2;
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getIsVote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.setIsVote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional solana.storage.ConfirmedBlock.Transaction transaction = 3;
 * @return {?proto.solana.storage.ConfirmedBlock.Transaction}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getTransaction = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.Transaction} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.Transaction, 3));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.Transaction|undefined} value
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
*/
proto.geyser.SubscribeUpdateTransactionInfo.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional solana.storage.ConfirmedBlock.TransactionStatusMeta meta = 4;
 * @return {?proto.solana.storage.ConfirmedBlock.TransactionStatusMeta}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getMeta = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.TransactionStatusMeta} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.TransactionStatusMeta, 4));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.TransactionStatusMeta|undefined} value
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
*/
proto.geyser.SubscribeUpdateTransactionInfo.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 index = 5;
 * @return {number}
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo} returns this
 */
proto.geyser.SubscribeUpdateTransactionInfo.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateTransactionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateTransactionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateTransactionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    signature: msg.getSignature_asB64(),
    isVote: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    err: (f = msg.getErr()) && solana$storage_pb.TransactionError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus}
 */
proto.geyser.SubscribeUpdateTransactionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateTransactionStatus;
  return proto.geyser.SubscribeUpdateTransactionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateTransactionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus}
 */
proto.geyser.SubscribeUpdateTransactionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsVote(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIndex(value);
      break;
    case 5:
      var value = new solana$storage_pb.TransactionError;
      reader.readMessage(value,solana$storage_pb.TransactionError.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateTransactionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateTransactionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateTransactionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getIsVote();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      solana$storage_pb.TransactionError.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus} returns this
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes signature = 2;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature = 2;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus} returns this
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bool is_vote = 3;
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getIsVote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus} returns this
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.setIsVote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint64 index = 4;
 * @return {number}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus} returns this
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional solana.storage.ConfirmedBlock.TransactionError err = 5;
 * @return {?proto.solana.storage.ConfirmedBlock.TransactionError}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.getErr = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.TransactionError} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.TransactionError, 5));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.TransactionError|undefined} value
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus} returns this
*/
proto.geyser.SubscribeUpdateTransactionStatus.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateTransactionStatus} returns this
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateTransactionStatus.prototype.hasErr = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geyser.SubscribeUpdateBlock.repeatedFields_ = [6,11,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockhash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rewards: (f = msg.getRewards()) && solana$storage_pb.Rewards.toObject(includeInstance, f),
    blockTime: (f = msg.getBlockTime()) && solana$storage_pb.UnixTimestamp.toObject(includeInstance, f),
    blockHeight: (f = msg.getBlockHeight()) && solana$storage_pb.BlockHeight.toObject(includeInstance, f),
    parentSlot: jspb.Message.getFieldWithDefault(msg, 7, 0),
    parentBlockhash: jspb.Message.getFieldWithDefault(msg, 8, ""),
    executedTransactionCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.geyser.SubscribeUpdateTransactionInfo.toObject, includeInstance),
    updatedAccountCount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.geyser.SubscribeUpdateAccountInfo.toObject, includeInstance),
    entriesCount: jspb.Message.getFieldWithDefault(msg, 12, 0),
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.geyser.SubscribeUpdateEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateBlock}
 */
proto.geyser.SubscribeUpdateBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateBlock;
  return proto.geyser.SubscribeUpdateBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateBlock}
 */
proto.geyser.SubscribeUpdateBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockhash(value);
      break;
    case 3:
      var value = new solana$storage_pb.Rewards;
      reader.readMessage(value,solana$storage_pb.Rewards.deserializeBinaryFromReader);
      msg.setRewards(value);
      break;
    case 4:
      var value = new solana$storage_pb.UnixTimestamp;
      reader.readMessage(value,solana$storage_pb.UnixTimestamp.deserializeBinaryFromReader);
      msg.setBlockTime(value);
      break;
    case 5:
      var value = new solana$storage_pb.BlockHeight;
      reader.readMessage(value,solana$storage_pb.BlockHeight.deserializeBinaryFromReader);
      msg.setBlockHeight(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setParentSlot(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentBlockhash(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExecutedTransactionCount(value);
      break;
    case 6:
      var value = new proto.geyser.SubscribeUpdateTransactionInfo;
      reader.readMessage(value,proto.geyser.SubscribeUpdateTransactionInfo.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAccountCount(value);
      break;
    case 11:
      var value = new proto.geyser.SubscribeUpdateAccountInfo;
      reader.readMessage(value,proto.geyser.SubscribeUpdateAccountInfo.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEntriesCount(value);
      break;
    case 13:
      var value = new proto.geyser.SubscribeUpdateEntry;
      reader.readMessage(value,proto.geyser.SubscribeUpdateEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBlockhash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRewards();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      solana$storage_pb.Rewards.serializeBinaryToWriter
    );
  }
  f = message.getBlockTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      solana$storage_pb.UnixTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getBlockHeight();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      solana$storage_pb.BlockHeight.serializeBinaryToWriter
    );
  }
  f = message.getParentSlot();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getParentBlockhash();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExecutedTransactionCount();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.geyser.SubscribeUpdateTransactionInfo.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAccountCount();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.geyser.SubscribeUpdateAccountInfo.serializeBinaryToWriter
    );
  }
  f = message.getEntriesCount();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.geyser.SubscribeUpdateEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string blockhash = 2;
 * @return {string}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getBlockhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setBlockhash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional solana.storage.ConfirmedBlock.Rewards rewards = 3;
 * @return {?proto.solana.storage.ConfirmedBlock.Rewards}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getRewards = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.Rewards} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.Rewards, 3));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.Rewards|undefined} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
*/
proto.geyser.SubscribeUpdateBlock.prototype.setRewards = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.clearRewards = function() {
  return this.setRewards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateBlock.prototype.hasRewards = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
 * @return {?proto.solana.storage.ConfirmedBlock.UnixTimestamp}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getBlockTime = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.UnixTimestamp} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.UnixTimestamp, 4));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.UnixTimestamp|undefined} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
*/
proto.geyser.SubscribeUpdateBlock.prototype.setBlockTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.clearBlockTime = function() {
  return this.setBlockTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateBlock.prototype.hasBlockTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
 * @return {?proto.solana.storage.ConfirmedBlock.BlockHeight}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getBlockHeight = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.BlockHeight} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.BlockHeight, 5));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.BlockHeight|undefined} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
*/
proto.geyser.SubscribeUpdateBlock.prototype.setBlockHeight = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.clearBlockHeight = function() {
  return this.setBlockHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateBlock.prototype.hasBlockHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 parent_slot = 7;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getParentSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setParentSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string parent_blockhash = 8;
 * @return {string}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getParentBlockhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setParentBlockhash = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 executed_transaction_count = 9;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getExecutedTransactionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setExecutedTransactionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated SubscribeUpdateTransactionInfo transactions = 6;
 * @return {!Array<!proto.geyser.SubscribeUpdateTransactionInfo>}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.geyser.SubscribeUpdateTransactionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geyser.SubscribeUpdateTransactionInfo, 6));
};


/**
 * @param {!Array<!proto.geyser.SubscribeUpdateTransactionInfo>} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
*/
proto.geyser.SubscribeUpdateBlock.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.geyser.SubscribeUpdateTransactionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeUpdateTransactionInfo}
 */
proto.geyser.SubscribeUpdateBlock.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.geyser.SubscribeUpdateTransactionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};


/**
 * optional uint64 updated_account_count = 10;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getUpdatedAccountCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setUpdatedAccountCount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated SubscribeUpdateAccountInfo accounts = 11;
 * @return {!Array<!proto.geyser.SubscribeUpdateAccountInfo>}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.geyser.SubscribeUpdateAccountInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geyser.SubscribeUpdateAccountInfo, 11));
};


/**
 * @param {!Array<!proto.geyser.SubscribeUpdateAccountInfo>} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
*/
proto.geyser.SubscribeUpdateBlock.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.geyser.SubscribeUpdateAccountInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeUpdateAccountInfo}
 */
proto.geyser.SubscribeUpdateBlock.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.geyser.SubscribeUpdateAccountInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};


/**
 * optional uint64 entries_count = 12;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getEntriesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.setEntriesCount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated SubscribeUpdateEntry entries = 13;
 * @return {!Array<!proto.geyser.SubscribeUpdateEntry>}
 */
proto.geyser.SubscribeUpdateBlock.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.geyser.SubscribeUpdateEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geyser.SubscribeUpdateEntry, 13));
};


/**
 * @param {!Array<!proto.geyser.SubscribeUpdateEntry>} value
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
*/
proto.geyser.SubscribeUpdateBlock.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.geyser.SubscribeUpdateEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geyser.SubscribeUpdateEntry}
 */
proto.geyser.SubscribeUpdateBlock.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.geyser.SubscribeUpdateEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geyser.SubscribeUpdateBlock} returns this
 */
proto.geyser.SubscribeUpdateBlock.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateBlockMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateBlockMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateBlockMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockhash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rewards: (f = msg.getRewards()) && solana$storage_pb.Rewards.toObject(includeInstance, f),
    blockTime: (f = msg.getBlockTime()) && solana$storage_pb.UnixTimestamp.toObject(includeInstance, f),
    blockHeight: (f = msg.getBlockHeight()) && solana$storage_pb.BlockHeight.toObject(includeInstance, f),
    parentSlot: jspb.Message.getFieldWithDefault(msg, 6, 0),
    parentBlockhash: jspb.Message.getFieldWithDefault(msg, 7, ""),
    executedTransactionCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    entriesCount: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateBlockMeta}
 */
proto.geyser.SubscribeUpdateBlockMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateBlockMeta;
  return proto.geyser.SubscribeUpdateBlockMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateBlockMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateBlockMeta}
 */
proto.geyser.SubscribeUpdateBlockMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockhash(value);
      break;
    case 3:
      var value = new solana$storage_pb.Rewards;
      reader.readMessage(value,solana$storage_pb.Rewards.deserializeBinaryFromReader);
      msg.setRewards(value);
      break;
    case 4:
      var value = new solana$storage_pb.UnixTimestamp;
      reader.readMessage(value,solana$storage_pb.UnixTimestamp.deserializeBinaryFromReader);
      msg.setBlockTime(value);
      break;
    case 5:
      var value = new solana$storage_pb.BlockHeight;
      reader.readMessage(value,solana$storage_pb.BlockHeight.deserializeBinaryFromReader);
      msg.setBlockHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setParentSlot(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentBlockhash(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExecutedTransactionCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEntriesCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateBlockMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateBlockMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateBlockMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBlockhash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRewards();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      solana$storage_pb.Rewards.serializeBinaryToWriter
    );
  }
  f = message.getBlockTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      solana$storage_pb.UnixTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getBlockHeight();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      solana$storage_pb.BlockHeight.serializeBinaryToWriter
    );
  }
  f = message.getParentSlot();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getParentBlockhash();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExecutedTransactionCount();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getEntriesCount();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string blockhash = 2;
 * @return {string}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getBlockhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.setBlockhash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional solana.storage.ConfirmedBlock.Rewards rewards = 3;
 * @return {?proto.solana.storage.ConfirmedBlock.Rewards}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getRewards = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.Rewards} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.Rewards, 3));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.Rewards|undefined} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
*/
proto.geyser.SubscribeUpdateBlockMeta.prototype.setRewards = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.clearRewards = function() {
  return this.setRewards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.hasRewards = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
 * @return {?proto.solana.storage.ConfirmedBlock.UnixTimestamp}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getBlockTime = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.UnixTimestamp} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.UnixTimestamp, 4));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.UnixTimestamp|undefined} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
*/
proto.geyser.SubscribeUpdateBlockMeta.prototype.setBlockTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.clearBlockTime = function() {
  return this.setBlockTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.hasBlockTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
 * @return {?proto.solana.storage.ConfirmedBlock.BlockHeight}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getBlockHeight = function() {
  return /** @type{?proto.solana.storage.ConfirmedBlock.BlockHeight} */ (
    jspb.Message.getWrapperField(this, solana$storage_pb.BlockHeight, 5));
};


/**
 * @param {?proto.solana.storage.ConfirmedBlock.BlockHeight|undefined} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
*/
proto.geyser.SubscribeUpdateBlockMeta.prototype.setBlockHeight = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.clearBlockHeight = function() {
  return this.setBlockHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.hasBlockHeight = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 parent_slot = 6;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getParentSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.setParentSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string parent_blockhash = 7;
 * @return {string}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getParentBlockhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.setParentBlockhash = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 executed_transaction_count = 8;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getExecutedTransactionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.setExecutedTransactionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 entries_count = 9;
 * @return {number}
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.getEntriesCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateBlockMeta} returns this
 */
proto.geyser.SubscribeUpdateBlockMeta.prototype.setEntriesCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdateEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdateEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdateEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numHashes: jspb.Message.getFieldWithDefault(msg, 3, 0),
    hash: msg.getHash_asB64(),
    executedTransactionCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    startingTransactionIndex: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdateEntry}
 */
proto.geyser.SubscribeUpdateEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdateEntry;
  return proto.geyser.SubscribeUpdateEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdateEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdateEntry}
 */
proto.geyser.SubscribeUpdateEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumHashes(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExecutedTransactionCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartingTransactionIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdateEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdateEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdateEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getNumHashes();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getExecutedTransactionCount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getStartingTransactionIndex();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateEntry} returns this
 */
proto.geyser.SubscribeUpdateEntry.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 index = 2;
 * @return {number}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateEntry} returns this
 */
proto.geyser.SubscribeUpdateEntry.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 num_hashes = 3;
 * @return {number}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getNumHashes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateEntry} returns this
 */
proto.geyser.SubscribeUpdateEntry.prototype.setNumHashes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hash = 4;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.geyser.SubscribeUpdateEntry} returns this
 */
proto.geyser.SubscribeUpdateEntry.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 executed_transaction_count = 5;
 * @return {number}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getExecutedTransactionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateEntry} returns this
 */
proto.geyser.SubscribeUpdateEntry.prototype.setExecutedTransactionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 starting_transaction_index = 6;
 * @return {number}
 */
proto.geyser.SubscribeUpdateEntry.prototype.getStartingTransactionIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdateEntry} returns this
 */
proto.geyser.SubscribeUpdateEntry.prototype.setStartingTransactionIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdatePing.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdatePing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdatePing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdatePing.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdatePing}
 */
proto.geyser.SubscribeUpdatePing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdatePing;
  return proto.geyser.SubscribeUpdatePing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdatePing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdatePing}
 */
proto.geyser.SubscribeUpdatePing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdatePing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdatePing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdatePing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdatePing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.SubscribeUpdatePong.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.SubscribeUpdatePong.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.SubscribeUpdatePong} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdatePong.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.SubscribeUpdatePong}
 */
proto.geyser.SubscribeUpdatePong.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.SubscribeUpdatePong;
  return proto.geyser.SubscribeUpdatePong.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.SubscribeUpdatePong} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.SubscribeUpdatePong}
 */
proto.geyser.SubscribeUpdatePong.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.SubscribeUpdatePong.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.SubscribeUpdatePong.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.SubscribeUpdatePong} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.SubscribeUpdatePong.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.geyser.SubscribeUpdatePong.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.SubscribeUpdatePong} returns this
 */
proto.geyser.SubscribeUpdatePong.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.PingRequest}
 */
proto.geyser.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.PingRequest;
  return proto.geyser.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.PingRequest}
 */
proto.geyser.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.geyser.PingRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.PingRequest} returns this
 */
proto.geyser.PingRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.PongResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.PongResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.PongResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.PongResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.PongResponse}
 */
proto.geyser.PongResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.PongResponse;
  return proto.geyser.PongResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.PongResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.PongResponse}
 */
proto.geyser.PongResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.PongResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.PongResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.PongResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.PongResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.geyser.PongResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.PongResponse} returns this
 */
proto.geyser.PongResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetLatestBlockhashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetLatestBlockhashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetLatestBlockhashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetLatestBlockhashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitment: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetLatestBlockhashRequest}
 */
proto.geyser.GetLatestBlockhashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetLatestBlockhashRequest;
  return proto.geyser.GetLatestBlockhashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetLatestBlockhashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetLatestBlockhashRequest}
 */
proto.geyser.GetLatestBlockhashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.geyser.CommitmentLevel} */ (reader.readEnum());
      msg.setCommitment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetLatestBlockhashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetLatestBlockhashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetLatestBlockhashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetLatestBlockhashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional CommitmentLevel commitment = 1;
 * @return {!proto.geyser.CommitmentLevel}
 */
proto.geyser.GetLatestBlockhashRequest.prototype.getCommitment = function() {
  return /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.geyser.CommitmentLevel} value
 * @return {!proto.geyser.GetLatestBlockhashRequest} returns this
 */
proto.geyser.GetLatestBlockhashRequest.prototype.setCommitment = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.GetLatestBlockhashRequest} returns this
 */
proto.geyser.GetLatestBlockhashRequest.prototype.clearCommitment = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.GetLatestBlockhashRequest.prototype.hasCommitment = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetLatestBlockhashResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetLatestBlockhashResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetLatestBlockhashResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetLatestBlockhashResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockhash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastValidBlockHeight: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetLatestBlockhashResponse}
 */
proto.geyser.GetLatestBlockhashResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetLatestBlockhashResponse;
  return proto.geyser.GetLatestBlockhashResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetLatestBlockhashResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetLatestBlockhashResponse}
 */
proto.geyser.GetLatestBlockhashResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockhash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastValidBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetLatestBlockhashResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetLatestBlockhashResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetLatestBlockhashResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetLatestBlockhashResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBlockhash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastValidBlockHeight();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.GetLatestBlockhashResponse.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.GetLatestBlockhashResponse} returns this
 */
proto.geyser.GetLatestBlockhashResponse.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string blockhash = 2;
 * @return {string}
 */
proto.geyser.GetLatestBlockhashResponse.prototype.getBlockhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.GetLatestBlockhashResponse} returns this
 */
proto.geyser.GetLatestBlockhashResponse.prototype.setBlockhash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 last_valid_block_height = 3;
 * @return {number}
 */
proto.geyser.GetLatestBlockhashResponse.prototype.getLastValidBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.GetLatestBlockhashResponse} returns this
 */
proto.geyser.GetLatestBlockhashResponse.prototype.setLastValidBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetBlockHeightRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetBlockHeightRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetBlockHeightRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetBlockHeightRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitment: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetBlockHeightRequest}
 */
proto.geyser.GetBlockHeightRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetBlockHeightRequest;
  return proto.geyser.GetBlockHeightRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetBlockHeightRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetBlockHeightRequest}
 */
proto.geyser.GetBlockHeightRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.geyser.CommitmentLevel} */ (reader.readEnum());
      msg.setCommitment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetBlockHeightRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetBlockHeightRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetBlockHeightRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetBlockHeightRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional CommitmentLevel commitment = 1;
 * @return {!proto.geyser.CommitmentLevel}
 */
proto.geyser.GetBlockHeightRequest.prototype.getCommitment = function() {
  return /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.geyser.CommitmentLevel} value
 * @return {!proto.geyser.GetBlockHeightRequest} returns this
 */
proto.geyser.GetBlockHeightRequest.prototype.setCommitment = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.GetBlockHeightRequest} returns this
 */
proto.geyser.GetBlockHeightRequest.prototype.clearCommitment = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.GetBlockHeightRequest.prototype.hasCommitment = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetBlockHeightResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetBlockHeightResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetBlockHeightResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetBlockHeightResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockHeight: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetBlockHeightResponse}
 */
proto.geyser.GetBlockHeightResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetBlockHeightResponse;
  return proto.geyser.GetBlockHeightResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetBlockHeightResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetBlockHeightResponse}
 */
proto.geyser.GetBlockHeightResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetBlockHeightResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetBlockHeightResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetBlockHeightResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetBlockHeightResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 block_height = 1;
 * @return {number}
 */
proto.geyser.GetBlockHeightResponse.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.GetBlockHeightResponse} returns this
 */
proto.geyser.GetBlockHeightResponse.prototype.setBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetSlotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetSlotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetSlotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetSlotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitment: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetSlotRequest}
 */
proto.geyser.GetSlotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetSlotRequest;
  return proto.geyser.GetSlotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetSlotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetSlotRequest}
 */
proto.geyser.GetSlotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.geyser.CommitmentLevel} */ (reader.readEnum());
      msg.setCommitment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetSlotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetSlotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetSlotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetSlotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional CommitmentLevel commitment = 1;
 * @return {!proto.geyser.CommitmentLevel}
 */
proto.geyser.GetSlotRequest.prototype.getCommitment = function() {
  return /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.geyser.CommitmentLevel} value
 * @return {!proto.geyser.GetSlotRequest} returns this
 */
proto.geyser.GetSlotRequest.prototype.setCommitment = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.GetSlotRequest} returns this
 */
proto.geyser.GetSlotRequest.prototype.clearCommitment = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.GetSlotRequest.prototype.hasCommitment = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetSlotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetSlotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetSlotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetSlotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetSlotResponse}
 */
proto.geyser.GetSlotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetSlotResponse;
  return proto.geyser.GetSlotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetSlotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetSlotResponse}
 */
proto.geyser.GetSlotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetSlotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetSlotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetSlotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetSlotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.GetSlotResponse.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.GetSlotResponse} returns this
 */
proto.geyser.GetSlotResponse.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetVersionRequest}
 */
proto.geyser.GetVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetVersionRequest;
  return proto.geyser.GetVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetVersionRequest}
 */
proto.geyser.GetVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.GetVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.GetVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.GetVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.GetVersionResponse}
 */
proto.geyser.GetVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.GetVersionResponse;
  return proto.geyser.GetVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.GetVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.GetVersionResponse}
 */
proto.geyser.GetVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.GetVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.GetVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.GetVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.GetVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.geyser.GetVersionResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.GetVersionResponse} returns this
 */
proto.geyser.GetVersionResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.IsBlockhashValidRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.IsBlockhashValidRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.IsBlockhashValidRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.IsBlockhashValidRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockhash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commitment: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.IsBlockhashValidRequest}
 */
proto.geyser.IsBlockhashValidRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.IsBlockhashValidRequest;
  return proto.geyser.IsBlockhashValidRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.IsBlockhashValidRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.IsBlockhashValidRequest}
 */
proto.geyser.IsBlockhashValidRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockhash(value);
      break;
    case 2:
      var value = /** @type {!proto.geyser.CommitmentLevel} */ (reader.readEnum());
      msg.setCommitment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.IsBlockhashValidRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.IsBlockhashValidRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.IsBlockhashValidRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.IsBlockhashValidRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockhash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string blockhash = 1;
 * @return {string}
 */
proto.geyser.IsBlockhashValidRequest.prototype.getBlockhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.geyser.IsBlockhashValidRequest} returns this
 */
proto.geyser.IsBlockhashValidRequest.prototype.setBlockhash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CommitmentLevel commitment = 2;
 * @return {!proto.geyser.CommitmentLevel}
 */
proto.geyser.IsBlockhashValidRequest.prototype.getCommitment = function() {
  return /** @type {!proto.geyser.CommitmentLevel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.geyser.CommitmentLevel} value
 * @return {!proto.geyser.IsBlockhashValidRequest} returns this
 */
proto.geyser.IsBlockhashValidRequest.prototype.setCommitment = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.geyser.IsBlockhashValidRequest} returns this
 */
proto.geyser.IsBlockhashValidRequest.prototype.clearCommitment = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geyser.IsBlockhashValidRequest.prototype.hasCommitment = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.geyser.IsBlockhashValidResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.geyser.IsBlockhashValidResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.geyser.IsBlockhashValidResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.IsBlockhashValidResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    slot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geyser.IsBlockhashValidResponse}
 */
proto.geyser.IsBlockhashValidResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.geyser.IsBlockhashValidResponse;
  return proto.geyser.IsBlockhashValidResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geyser.IsBlockhashValidResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geyser.IsBlockhashValidResponse}
 */
proto.geyser.IsBlockhashValidResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlot(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geyser.IsBlockhashValidResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.geyser.IsBlockhashValidResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geyser.IsBlockhashValidResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geyser.IsBlockhashValidResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlot();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional uint64 slot = 1;
 * @return {number}
 */
proto.geyser.IsBlockhashValidResponse.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.geyser.IsBlockhashValidResponse} returns this
 */
proto.geyser.IsBlockhashValidResponse.prototype.setSlot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool valid = 2;
 * @return {boolean}
 */
proto.geyser.IsBlockhashValidResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.geyser.IsBlockhashValidResponse} returns this
 */
proto.geyser.IsBlockhashValidResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.geyser.CommitmentLevel = {
  PROCESSED: 0,
  CONFIRMED: 1,
  FINALIZED: 2
};

/**
 * @enum {number}
 */
proto.geyser.SlotStatus = {
  SLOT_PROCESSED: 0,
  SLOT_CONFIRMED: 1,
  SLOT_FINALIZED: 2,
  SLOT_FIRST_SHRED_RECEIVED: 3,
  SLOT_COMPLETED: 4,
  SLOT_CREATED_BANK: 5,
  SLOT_DEAD: 6
};

goog.object.extend(exports, proto.geyser);
